{"id":"../node_modules/jsan/lib/path-getter.js","dependencies":[{"name":"/Users/professional/Desktop/side-15inch/pusher_test/package.json","includedInParent":true,"mtime":1604843048199},{"name":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/jsan/package.json","includedInParent":true,"mtime":1604842343487}],"generated":{"js":"module.exports = pathGetter;\n\nfunction pathGetter(obj, path) {\n  if (path !== '$') {\n    var paths = getPaths(path);\n    for (var i = 0; i < paths.length; i++) {\n      path = paths[i].toString().replace(/\\\\\"/g, '\"');\n      if (typeof obj[path] === 'undefined' && i !== paths.length - 1) continue;\n      obj = obj[path];\n    }\n  }\n  return obj;\n}\n\nfunction getPaths(pathString) {\n  var regex = /(?:\\.(\\w+))|(?:\\[(\\d+)\\])|(?:\\[\"((?:[^\\\\\"]|\\\\.)*)\"\\])/g;\n  var matches = [];\n  var match;\n  while (match = regex.exec(pathString)) {\n    matches.push( match[1] || match[2] || match[3] );\n  }\n  return matches;\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/jsan/lib/path-getter.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}}],"sources":{"../node_modules/jsan/lib/path-getter.js":"module.exports = pathGetter;\n\nfunction pathGetter(obj, path) {\n  if (path !== '$') {\n    var paths = getPaths(path);\n    for (var i = 0; i < paths.length; i++) {\n      path = paths[i].toString().replace(/\\\\\"/g, '\"');\n      if (typeof obj[path] === 'undefined' && i !== paths.length - 1) continue;\n      obj = obj[path];\n    }\n  }\n  return obj;\n}\n\nfunction getPaths(pathString) {\n  var regex = /(?:\\.(\\w+))|(?:\\[(\\d+)\\])|(?:\\[\"((?:[^\\\\\"]|\\\\.)*)\"\\])/g;\n  var matches = [];\n  var match;\n  while (match = regex.exec(pathString)) {\n    matches.push( match[1] || match[2] || match[3] );\n  }\n  return matches;\n}\n"},"lineCount":24}},"error":null,"hash":"d5f607c144862ca31d0b003686b3fb4d","cacheData":{"env":{}}}