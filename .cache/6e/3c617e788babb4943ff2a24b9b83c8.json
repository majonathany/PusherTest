{"id":"../node_modules/socketcluster-client/lib/scclientsocket.js","dependencies":[{"name":"/Users/professional/Desktop/side-15inch/pusher_test/package.json","includedInParent":true,"mtime":1604843048199},{"name":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/socketcluster-client/package.json","includedInParent":true,"mtime":1604842343265},{"name":"component-emitter","loc":{"line":1,"column":22},"parent":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/socketcluster-client/lib/scclientsocket.js","resolved":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/socketcluster-client/node_modules/component-emitter/index.js"},{"name":"sc-channel","loc":{"line":2,"column":24},"parent":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/socketcluster-client/lib/scclientsocket.js","resolved":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/sc-channel/index.js"},{"name":"./response","loc":{"line":3,"column":23},"parent":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/socketcluster-client/lib/scclientsocket.js","resolved":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/socketcluster-client/lib/response.js"},{"name":"./auth","loc":{"line":4,"column":25},"parent":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/socketcluster-client/lib/scclientsocket.js","resolved":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/socketcluster-client/lib/auth.js"},{"name":"sc-formatter","loc":{"line":5,"column":24},"parent":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/socketcluster-client/lib/scclientsocket.js","resolved":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/sc-formatter/index.js"},{"name":"./sctransport","loc":{"line":6,"column":26},"parent":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/socketcluster-client/lib/scclientsocket.js","resolved":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/socketcluster-client/lib/sctransport.js"},{"name":"querystring","loc":{"line":7,"column":26},"parent":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/socketcluster-client/lib/scclientsocket.js","resolved":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/querystring-es3/index.js"},{"name":"linked-list","loc":{"line":8,"column":25},"parent":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/socketcluster-client/lib/scclientsocket.js","resolved":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/linked-list/index.js"},{"name":"buffer/","loc":{"line":9,"column":21},"parent":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/socketcluster-client/lib/scclientsocket.js","resolved":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/buffer/index.js"},{"name":"clone","loc":{"line":10,"column":20},"parent":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/socketcluster-client/lib/scclientsocket.js","resolved":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/clone/clone.js"},{"name":"sc-errors","loc":{"line":12,"column":23},"parent":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/socketcluster-client/lib/scclientsocket.js","resolved":"/Users/professional/Desktop/side-15inch/pusher_test/node_modules/sc-errors/index.js"}],"generated":{"js":"\nvar global = arguments[3];\nvar Emitter = require('component-emitter');\r\nvar SCChannel = require('sc-channel').SCChannel;\r\nvar Response = require('./response').Response;\r\nvar AuthEngine = require('./auth').AuthEngine;\r\nvar formatter = require('sc-formatter');\r\nvar SCTransport = require('./sctransport').SCTransport;\r\nvar querystring = require('querystring');\r\nvar LinkedList = require('linked-list');\r\nvar Buffer = require('buffer/').Buffer;\r\nvar clone = require('clone');\r\n\r\nvar scErrors = require('sc-errors');\r\nvar InvalidArgumentsError = scErrors.InvalidArgumentsError;\r\nvar InvalidMessageError = scErrors.InvalidMessageError;\r\nvar InvalidActionError = scErrors.InvalidActionError;\r\nvar SocketProtocolError = scErrors.SocketProtocolError;\r\nvar TimeoutError = scErrors.TimeoutError;\r\nvar BadConnectionError = scErrors.BadConnectionError;\r\n\r\nvar isBrowser = typeof window !== 'undefined';\r\n\r\n\r\nvar SCClientSocket = function (opts) {\r\n  var self = this;\r\n\r\n  Emitter.call(this);\r\n\r\n  this.id = null;\r\n  this.state = this.CLOSED;\r\n  this.authState = this.UNAUTHENTICATED;\r\n  this.signedAuthToken = null;\r\n  this.authToken = null;\r\n  this.pendingReconnect = false;\r\n  this.pendingReconnectTimeout = null;\r\n  this.preparingPendingSubscriptions = false;\r\n  this.clientId = opts.clientId;\r\n\r\n  this.connectTimeout = opts.connectTimeout;\r\n  this.ackTimeout = opts.ackTimeout;\r\n  this.channelPrefix = opts.channelPrefix || null;\r\n  this.disconnectOnUnload = opts.disconnectOnUnload == null ? true : opts.disconnectOnUnload;\r\n  this.authTokenName = opts.authTokenName;\r\n\r\n  // pingTimeout will be ackTimeout at the start, but it will\r\n  // be updated with values provided by the 'connect' event\r\n  this.pingTimeout = this.ackTimeout;\r\n  this.pingTimeoutDisabled = !!opts.pingTimeoutDisabled;\r\n  this.active = true;\r\n\r\n  this._clientMap = opts.clientMap || {};\r\n\r\n  var maxTimeout = Math.pow(2, 31) - 1;\r\n\r\n  var verifyDuration = function (propertyName) {\r\n    if (self[propertyName] > maxTimeout) {\r\n      throw new InvalidArgumentsError('The ' + propertyName +\r\n        ' value provided exceeded the maximum amount allowed');\r\n    }\r\n  };\r\n\r\n  verifyDuration('connectTimeout');\r\n  verifyDuration('ackTimeout');\r\n\r\n  this._localEvents = {\r\n    'connect': 1,\r\n    'connectAbort': 1,\r\n    'close': 1,\r\n    'disconnect': 1,\r\n    'message': 1,\r\n    'error': 1,\r\n    'raw': 1,\r\n    'kickOut': 1,\r\n    'subscribe': 1,\r\n    'unsubscribe': 1,\r\n    'subscribeStateChange': 1,\r\n    'authStateChange': 1,\r\n    'authenticate': 1,\r\n    'deauthenticate': 1,\r\n    'removeAuthToken': 1,\r\n    'subscribeRequest': 1\r\n  };\r\n\r\n  this.connectAttempts = 0;\r\n\r\n  this._emitBuffer = new LinkedList();\r\n  this.channels = {};\r\n\r\n  this.options = opts;\r\n\r\n  this._cid = 1;\r\n\r\n  this.options.callIdGenerator = function () {\r\n    return self._cid++;\r\n  };\r\n\r\n  if (this.options.autoReconnect) {\r\n    if (this.options.autoReconnectOptions == null) {\r\n      this.options.autoReconnectOptions = {};\r\n    }\r\n\r\n    // Add properties to the this.options.autoReconnectOptions object.\r\n    // We assign the reference to a reconnectOptions variable to avoid repetition.\r\n    var reconnectOptions = this.options.autoReconnectOptions;\r\n    if (reconnectOptions.initialDelay == null) {\r\n      reconnectOptions.initialDelay = 10000;\r\n    }\r\n    if (reconnectOptions.randomness == null) {\r\n      reconnectOptions.randomness = 10000;\r\n    }\r\n    if (reconnectOptions.multiplier == null) {\r\n      reconnectOptions.multiplier = 1.5;\r\n    }\r\n    if (reconnectOptions.maxDelay == null) {\r\n      reconnectOptions.maxDelay = 60000;\r\n    }\r\n  }\r\n\r\n  if (this.options.subscriptionRetryOptions == null) {\r\n    this.options.subscriptionRetryOptions = {};\r\n  }\r\n\r\n  if (this.options.authEngine) {\r\n    this.auth = this.options.authEngine;\r\n  } else {\r\n    this.auth = new AuthEngine();\r\n  }\r\n\r\n  if (this.options.codecEngine) {\r\n    this.codec = this.options.codecEngine;\r\n  } else {\r\n    // Default codec engine\r\n    this.codec = formatter;\r\n  }\r\n\r\n  if (this.options.protocol) {\r\n    var protocolOptionError = new InvalidArgumentsError('The \"protocol\" option' +\r\n      ' does not affect socketcluster-client. If you want to utilize SSL/TLS' +\r\n      ' - use \"secure\" option instead');\r\n    this._onSCError(protocolOptionError);\r\n  }\r\n\r\n  this.options.path = this.options.path.replace(/\\/$/, '') + '/';\r\n\r\n  this.options.query = opts.query || {};\r\n  if (typeof this.options.query === 'string') {\r\n    this.options.query = querystring.parse(this.options.query);\r\n  }\r\n\r\n  this._channelEmitter = new Emitter();\r\n\r\n  this._unloadHandler = function () {\r\n    self.disconnect();\r\n  };\r\n\r\n  if (isBrowser && this.disconnectOnUnload && global.addEventListener) {\r\n    global.addEventListener('beforeunload', this._unloadHandler, false);\r\n  }\r\n  this._clientMap[this.clientId] = this;\r\n\r\n  if (this.options.autoConnect) {\r\n    this.connect();\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype = Object.create(Emitter.prototype);\r\n\r\nSCClientSocket.CONNECTING = SCClientSocket.prototype.CONNECTING = SCTransport.prototype.CONNECTING;\r\nSCClientSocket.OPEN = SCClientSocket.prototype.OPEN = SCTransport.prototype.OPEN;\r\nSCClientSocket.CLOSED = SCClientSocket.prototype.CLOSED = SCTransport.prototype.CLOSED;\r\n\r\nSCClientSocket.AUTHENTICATED = SCClientSocket.prototype.AUTHENTICATED = 'authenticated';\r\nSCClientSocket.UNAUTHENTICATED = SCClientSocket.prototype.UNAUTHENTICATED = 'unauthenticated';\r\n\r\nSCClientSocket.PENDING = SCClientSocket.prototype.PENDING = 'pending';\r\n\r\nSCClientSocket.ignoreStatuses = scErrors.socketProtocolIgnoreStatuses;\r\nSCClientSocket.errorStatuses = scErrors.socketProtocolErrorStatuses;\r\n\r\nSCClientSocket.prototype._privateEventHandlerMap = {\r\n  '#publish': function (data) {\r\n    var undecoratedChannelName = this._undecorateChannelName(data.channel);\r\n    var isSubscribed = this.isSubscribed(undecoratedChannelName, true);\r\n\r\n    if (isSubscribed) {\r\n      this._channelEmitter.emit(undecoratedChannelName, data.data);\r\n    }\r\n  },\r\n  '#kickOut': function (data) {\r\n    var undecoratedChannelName = this._undecorateChannelName(data.channel);\r\n    var channel = this.channels[undecoratedChannelName];\r\n    if (channel) {\r\n      Emitter.prototype.emit.call(this, 'kickOut', data.message, undecoratedChannelName);\r\n      channel.emit('kickOut', data.message, undecoratedChannelName);\r\n      this._triggerChannelUnsubscribe(channel);\r\n    }\r\n  },\r\n  '#setAuthToken': function (data, response) {\r\n    var self = this;\r\n\r\n    if (data) {\r\n      var triggerAuthenticate = function (err) {\r\n        if (err) {\r\n          // This is a non-fatal error, we don't want to close the connection\r\n          // because of this but we do want to notify the server and throw an error\r\n          // on the client.\r\n          response.error(err);\r\n          self._onSCError(err);\r\n        } else {\r\n          self._changeToAuthenticatedState(data.token);\r\n          response.end();\r\n        }\r\n      };\r\n\r\n      this.auth.saveToken(this.authTokenName, data.token, {}, triggerAuthenticate);\r\n    } else {\r\n      response.error(new InvalidMessageError('No token data provided by #setAuthToken event'));\r\n    }\r\n  },\r\n  '#removeAuthToken': function (data, response) {\r\n    var self = this;\r\n\r\n    this.auth.removeToken(this.authTokenName, function (err, oldToken) {\r\n      if (err) {\r\n        // Non-fatal error - Do not close the connection\r\n        response.error(err);\r\n        self._onSCError(err);\r\n      } else {\r\n        Emitter.prototype.emit.call(self, 'removeAuthToken', oldToken);\r\n        self._changeToUnauthenticatedStateAndClearTokens();\r\n        response.end();\r\n      }\r\n    });\r\n  },\r\n  '#disconnect': function (data) {\r\n    this.transport.close(data.code, data.data);\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype.getState = function () {\r\n  return this.state;\r\n};\r\n\r\nSCClientSocket.prototype.getBytesReceived = function () {\r\n  return this.transport.getBytesReceived();\r\n};\r\n\r\nSCClientSocket.prototype.deauthenticate = function (callback) {\r\n  var self = this;\r\n\r\n  this.auth.removeToken(this.authTokenName, function (err, oldToken) {\r\n    if (err) {\r\n      // Non-fatal error - Do not close the connection\r\n      self._onSCError(err);\r\n    } else {\r\n      Emitter.prototype.emit.call(self, 'removeAuthToken', oldToken);\r\n      if (self.state !== self.CLOSED) {\r\n        self.emit('#removeAuthToken');\r\n      }\r\n      self._changeToUnauthenticatedStateAndClearTokens();\r\n    }\r\n    callback && callback(err);\r\n  });\r\n};\r\n\r\nSCClientSocket.prototype.connect = SCClientSocket.prototype.open = function () {\r\n  var self = this;\r\n\r\n  if (!this.active) {\r\n    var error = new InvalidActionError('Cannot connect a destroyed client');\r\n    this._onSCError(error);\r\n    return;\r\n  }\r\n\r\n  if (this.state === this.CLOSED) {\r\n    this.pendingReconnect = false;\r\n    this.pendingReconnectTimeout = null;\r\n    clearTimeout(this._reconnectTimeoutRef);\r\n\r\n    this.state = this.CONNECTING;\r\n    Emitter.prototype.emit.call(this, 'connecting');\r\n\r\n    if (this.transport) {\r\n      this.transport.off();\r\n    }\r\n\r\n    this.transport = new SCTransport(this.auth, this.codec, this.options);\r\n\r\n    this.transport.on('open', function (status) {\r\n      self.state = self.OPEN;\r\n      self._onSCOpen(status);\r\n    });\r\n\r\n    this.transport.on('error', function (err) {\r\n      self._onSCError(err);\r\n    });\r\n\r\n    this.transport.on('close', function (code, data) {\r\n      self.state = self.CLOSED;\r\n      self._onSCClose(code, data);\r\n    });\r\n\r\n    this.transport.on('openAbort', function (code, data) {\r\n      self.state = self.CLOSED;\r\n      self._onSCClose(code, data, true);\r\n    });\r\n\r\n    this.transport.on('event', function (event, data, res) {\r\n      self._onSCEvent(event, data, res);\r\n    });\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype.reconnect = function (code, data) {\r\n  this.disconnect(code, data);\r\n  this.connect();\r\n};\r\n\r\nSCClientSocket.prototype.disconnect = function (code, data) {\r\n  code = code || 1000;\r\n\r\n  if (typeof code !== 'number') {\r\n    throw new InvalidArgumentsError('If specified, the code argument must be a number');\r\n  }\r\n\r\n  if (this.state === this.OPEN || this.state === this.CONNECTING) {\r\n    this.transport.close(code, data);\r\n  } else {\r\n    this.pendingReconnect = false;\r\n    this.pendingReconnectTimeout = null;\r\n    clearTimeout(this._reconnectTimeoutRef);\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype.destroy = function (code, data) {\r\n  if (isBrowser && global.removeEventListener) {\r\n    global.removeEventListener('beforeunload', this._unloadHandler, false);\r\n  }\r\n  this.active = false;\r\n  this.disconnect(code, data);\r\n  delete this._clientMap[this.clientId];\r\n};\r\n\r\nSCClientSocket.prototype._changeToUnauthenticatedStateAndClearTokens = function () {\r\n  if (this.authState !== this.UNAUTHENTICATED) {\r\n    var oldState = this.authState;\r\n    var oldSignedToken = this.signedAuthToken;\r\n    this.authState = this.UNAUTHENTICATED;\r\n    this.signedAuthToken = null;\r\n    this.authToken = null;\r\n\r\n    var stateChangeData = {\r\n      oldState: oldState,\r\n      newState: this.authState\r\n    };\r\n    Emitter.prototype.emit.call(this, 'authStateChange', stateChangeData);\r\n    Emitter.prototype.emit.call(this, 'deauthenticate', oldSignedToken);\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype._changeToAuthenticatedState = function (signedAuthToken) {\r\n  this.signedAuthToken = signedAuthToken;\r\n  this.authToken = this._extractAuthTokenData(signedAuthToken);\r\n\r\n  if (this.authState !== this.AUTHENTICATED) {\r\n    var oldState = this.authState;\r\n    this.authState = this.AUTHENTICATED;\r\n    var stateChangeData = {\r\n      oldState: oldState,\r\n      newState: this.authState,\r\n      signedAuthToken: signedAuthToken,\r\n      authToken: this.authToken\r\n    };\r\n    if (!this.preparingPendingSubscriptions) {\r\n      this.processPendingSubscriptions();\r\n    }\r\n\r\n    Emitter.prototype.emit.call(this, 'authStateChange', stateChangeData);\r\n  }\r\n  Emitter.prototype.emit.call(this, 'authenticate', signedAuthToken);\r\n};\r\n\r\nSCClientSocket.prototype.decodeBase64 = function (encodedString) {\r\n  return Buffer.from(encodedString, 'base64').toString('utf8');\r\n};\r\n\r\nSCClientSocket.prototype.encodeBase64 = function (decodedString) {\r\n  return Buffer.from(decodedString, 'utf8').toString('base64');\r\n};\r\n\r\nSCClientSocket.prototype._extractAuthTokenData = function (signedAuthToken) {\r\n  var tokenParts = (signedAuthToken || '').split('.');\r\n  var encodedTokenData = tokenParts[1];\r\n  if (encodedTokenData != null) {\r\n    var tokenData = encodedTokenData;\r\n    try {\r\n      tokenData = this.decodeBase64(tokenData);\r\n      return JSON.parse(tokenData);\r\n    } catch (e) {\r\n      return tokenData;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nSCClientSocket.prototype.getAuthToken = function () {\r\n  return this.authToken;\r\n};\r\n\r\nSCClientSocket.prototype.getSignedAuthToken = function () {\r\n  return this.signedAuthToken;\r\n};\r\n\r\n// Perform client-initiated authentication by providing an encrypted token string.\r\nSCClientSocket.prototype.authenticate = function (signedAuthToken, callback) {\r\n  var self = this;\r\n\r\n  this.emit('#authenticate', signedAuthToken, function (err, authStatus) {\r\n    if (authStatus && authStatus.isAuthenticated != null) {\r\n      // If authStatus is correctly formatted (has an isAuthenticated property),\r\n      // then we will rehydrate the authError.\r\n      if (authStatus.authError) {\r\n        authStatus.authError = scErrors.hydrateError(authStatus.authError);\r\n      }\r\n    } else {\r\n      // Some errors like BadConnectionError and TimeoutError will not pass a valid\r\n      // authStatus object to the current function, so we need to create it ourselves.\r\n      authStatus = {\r\n        isAuthenticated: self.authState,\r\n        authError: null\r\n      };\r\n    }\r\n    if (err) {\r\n      if (err.name !== 'BadConnectionError' && err.name !== 'TimeoutError') {\r\n        // In case of a bad/closed connection or a timeout, we maintain the last\r\n        // known auth state since those errors don't mean that the token is invalid.\r\n\r\n        self._changeToUnauthenticatedStateAndClearTokens();\r\n      }\r\n      callback && callback(err, authStatus);\r\n    } else {\r\n      self.auth.saveToken(self.authTokenName, signedAuthToken, {}, function (err) {\r\n        if (err) {\r\n          self._onSCError(err);\r\n        }\r\n        if (authStatus.isAuthenticated) {\r\n          self._changeToAuthenticatedState(signedAuthToken);\r\n        } else {\r\n          self._changeToUnauthenticatedStateAndClearTokens();\r\n        }\r\n        callback && callback(err, authStatus);\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nSCClientSocket.prototype._tryReconnect = function (initialDelay) {\r\n  var self = this;\r\n\r\n  var exponent = this.connectAttempts++;\r\n  var reconnectOptions = this.options.autoReconnectOptions;\r\n  var timeout;\r\n\r\n  if (initialDelay == null || exponent > 0) {\r\n    var initialTimeout = Math.round(reconnectOptions.initialDelay + (reconnectOptions.randomness || 0) * Math.random());\r\n\r\n    timeout = Math.round(initialTimeout * Math.pow(reconnectOptions.multiplier, exponent));\r\n  } else {\r\n    timeout = initialDelay;\r\n  }\r\n\r\n  if (timeout > reconnectOptions.maxDelay) {\r\n    timeout = reconnectOptions.maxDelay;\r\n  }\r\n\r\n  clearTimeout(this._reconnectTimeoutRef);\r\n\r\n  this.pendingReconnect = true;\r\n  this.pendingReconnectTimeout = timeout;\r\n  this._reconnectTimeoutRef = setTimeout(function () {\r\n    self.connect();\r\n  }, timeout);\r\n};\r\n\r\nSCClientSocket.prototype._onSCOpen = function (status) {\r\n  var self = this;\r\n\r\n  this.preparingPendingSubscriptions = true;\r\n\r\n  if (status) {\r\n    this.id = status.id;\r\n    this.pingTimeout = status.pingTimeout;\r\n    this.transport.pingTimeout = this.pingTimeout;\r\n    if (status.isAuthenticated) {\r\n      this._changeToAuthenticatedState(status.authToken);\r\n    } else {\r\n      this._changeToUnauthenticatedStateAndClearTokens();\r\n    }\r\n  } else {\r\n    // This can happen if auth.loadToken (in sctransport.js) fails with\r\n    // an error - This means that the signedAuthToken cannot be loaded by\r\n    // the auth engine and therefore, we need to unauthenticate the client.\r\n    this._changeToUnauthenticatedStateAndClearTokens();\r\n  }\r\n\r\n  this.connectAttempts = 0;\r\n\r\n  if (this.options.autoSubscribeOnConnect) {\r\n    this.processPendingSubscriptions();\r\n  }\r\n\r\n  // If the user invokes the callback while in autoSubscribeOnConnect mode, it\r\n  // won't break anything.\r\n  Emitter.prototype.emit.call(this, 'connect', status, function () {\r\n    self.processPendingSubscriptions();\r\n  });\r\n\r\n  if (this.state === this.OPEN) {\r\n    this._flushEmitBuffer();\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype._onSCError = function (err) {\r\n  var self = this;\r\n\r\n  // Throw error in different stack frame so that error handling\r\n  // cannot interfere with a reconnect action.\r\n  setTimeout(function () {\r\n    if (self.listeners('error').length < 1) {\r\n      throw err;\r\n    } else {\r\n      Emitter.prototype.emit.call(self, 'error', err);\r\n    }\r\n  }, 0);\r\n};\r\n\r\nSCClientSocket.prototype._suspendSubscriptions = function () {\r\n  var channel, newState;\r\n  for (var channelName in this.channels) {\r\n    if (this.channels.hasOwnProperty(channelName)) {\r\n      channel = this.channels[channelName];\r\n      if (channel.state === channel.SUBSCRIBED ||\r\n        channel.state === channel.PENDING) {\r\n\r\n        newState = channel.PENDING;\r\n      } else {\r\n        newState = channel.UNSUBSCRIBED;\r\n      }\r\n\r\n      this._triggerChannelUnsubscribe(channel, newState);\r\n    }\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype._abortAllPendingEventsDueToBadConnection = function (failureType) {\r\n  var currentNode = this._emitBuffer.head;\r\n  var nextNode;\r\n\r\n  while (currentNode) {\r\n    nextNode = currentNode.next;\r\n    var eventObject = currentNode.data;\r\n    clearTimeout(eventObject.timeout);\r\n    delete eventObject.timeout;\r\n    currentNode.detach();\r\n    currentNode = nextNode;\r\n\r\n    var callback = eventObject.callback;\r\n    if (callback) {\r\n      delete eventObject.callback;\r\n      var errorMessage = \"Event '\" + eventObject.event +\r\n        \"' was aborted due to a bad connection\";\r\n      var error = new BadConnectionError(errorMessage, failureType);\r\n      callback.call(eventObject, error, eventObject);\r\n    }\r\n    // Cleanup any pending response callback in the transport layer too.\r\n    if (eventObject.cid) {\r\n      this.transport.cancelPendingResponse(eventObject.cid);\r\n    }\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype._onSCClose = function (code, data, openAbort) {\r\n  var self = this;\r\n\r\n  this.id = null;\r\n\r\n  if (this.transport) {\r\n    this.transport.off();\r\n  }\r\n  this.pendingReconnect = false;\r\n  this.pendingReconnectTimeout = null;\r\n  clearTimeout(this._reconnectTimeoutRef);\r\n\r\n  this._suspendSubscriptions();\r\n  this._abortAllPendingEventsDueToBadConnection(openAbort ? 'connectAbort' : 'disconnect');\r\n\r\n  // Try to reconnect\r\n  // on server ping timeout (4000)\r\n  // or on client pong timeout (4001)\r\n  // or on close without status (1005)\r\n  // or on handshake failure (4003)\r\n  // or on handshake rejection (4008)\r\n  // or on socket hung up (1006)\r\n  if (this.options.autoReconnect) {\r\n    if (code === 4000 || code === 4001 || code === 1005) {\r\n      // If there is a ping or pong timeout or socket closes without\r\n      // status, don't wait before trying to reconnect - These could happen\r\n      // if the client wakes up after a period of inactivity and in this case we\r\n      // want to re-establish the connection as soon as possible.\r\n      this._tryReconnect(0);\r\n\r\n      // Codes 4500 and above will be treated as permanent disconnects.\r\n      // Socket will not try to auto-reconnect.\r\n    } else if (code !== 1000 && code < 4500) {\r\n      this._tryReconnect();\r\n    }\r\n  }\r\n\r\n  if (openAbort) {\r\n    Emitter.prototype.emit.call(self, 'connectAbort', code, data);\r\n  } else {\r\n    Emitter.prototype.emit.call(self, 'disconnect', code, data);\r\n  }\r\n  Emitter.prototype.emit.call(self, 'close', code, data);\r\n\r\n  if (!SCClientSocket.ignoreStatuses[code]) {\r\n    var closeMessage;\r\n    if (data) {\r\n      closeMessage = 'Socket connection closed with status code ' + code + ' and reason: ' + data;\r\n    } else {\r\n      closeMessage = 'Socket connection closed with status code ' + code;\r\n    }\r\n    var err = new SocketProtocolError(SCClientSocket.errorStatuses[code] || closeMessage, code);\r\n    this._onSCError(err);\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype._onSCEvent = function (event, data, res) {\r\n  var handler = this._privateEventHandlerMap[event];\r\n  if (handler) {\r\n    handler.call(this, data, res);\r\n  } else {\r\n    Emitter.prototype.emit.call(this, event, data, function () {\r\n      res && res.callback.apply(res, arguments);\r\n    });\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype.decode = function (message) {\r\n  return this.transport.decode(message);\r\n};\r\n\r\nSCClientSocket.prototype.encode = function (object) {\r\n  return this.transport.encode(object);\r\n};\r\n\r\nSCClientSocket.prototype._flushEmitBuffer = function () {\r\n  var currentNode = this._emitBuffer.head;\r\n  var nextNode;\r\n\r\n  while (currentNode) {\r\n    nextNode = currentNode.next;\r\n    var eventObject = currentNode.data;\r\n    currentNode.detach();\r\n    this.transport.emitObject(eventObject);\r\n    currentNode = nextNode;\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype._handleEventAckTimeout = function (eventObject, eventNode) {\r\n  if (eventNode) {\r\n    eventNode.detach();\r\n  }\r\n  delete eventObject.timeout;\r\n\r\n  var callback = eventObject.callback;\r\n  if (callback) {\r\n    delete eventObject.callback;\r\n    var error = new TimeoutError(\"Event response for '\" + eventObject.event + \"' timed out\");\r\n    callback.call(eventObject, error, eventObject);\r\n  }\r\n  // Cleanup any pending response callback in the transport layer too.\r\n  if (eventObject.cid) {\r\n    this.transport.cancelPendingResponse(eventObject.cid);\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype._emit = function (event, data, callback) {\r\n  var self = this;\r\n\r\n  if (this.state === this.CLOSED) {\r\n    this.connect();\r\n  }\r\n  var eventObject = {\r\n    event: event,\r\n    callback: callback\r\n  };\r\n\r\n  var eventNode = new LinkedList.Item();\r\n\r\n  if (this.options.cloneData) {\r\n    eventObject.data = clone(data);\r\n  } else {\r\n    eventObject.data = data;\r\n  }\r\n  eventNode.data = eventObject;\r\n\r\n  eventObject.timeout = setTimeout(function () {\r\n    self._handleEventAckTimeout(eventObject, eventNode);\r\n  }, this.ackTimeout);\r\n\r\n  this._emitBuffer.append(eventNode);\r\n  if (this.state === this.OPEN) {\r\n    this._flushEmitBuffer();\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype.send = function (data) {\r\n  this.transport.send(data);\r\n};\r\n\r\nSCClientSocket.prototype.emit = function (event, data, callback) {\r\n  if (this._localEvents[event] == null) {\r\n    this._emit(event, data, callback);\r\n  } else if (event === 'error') {\r\n    Emitter.prototype.emit.call(this, event, data);\r\n  } else {\r\n    var error = new InvalidActionError('The \"' + event + '\" event is reserved and cannot be emitted on a client socket');\r\n    this._onSCError(error);\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype.publish = function (channelName, data, callback) {\r\n  var pubData = {\r\n    channel: this._decorateChannelName(channelName),\r\n    data: data\r\n  };\r\n  this.emit('#publish', pubData, callback);\r\n};\r\n\r\nSCClientSocket.prototype._triggerChannelSubscribe = function (channel, subscriptionOptions) {\r\n  var channelName = channel.name;\r\n\r\n  if (channel.state !== channel.SUBSCRIBED) {\r\n    var oldState = channel.state;\r\n    channel.state = channel.SUBSCRIBED;\r\n\r\n    var stateChangeData = {\r\n      channel: channelName,\r\n      oldState: oldState,\r\n      newState: channel.state,\r\n      subscriptionOptions: subscriptionOptions\r\n    };\r\n    channel.emit('subscribeStateChange', stateChangeData);\r\n    channel.emit('subscribe', channelName, subscriptionOptions);\r\n    Emitter.prototype.emit.call(this, 'subscribeStateChange', stateChangeData);\r\n    Emitter.prototype.emit.call(this, 'subscribe', channelName, subscriptionOptions);\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype._triggerChannelSubscribeFail = function (err, channel, subscriptionOptions) {\r\n  var channelName = channel.name;\r\n  var meetsAuthRequirements = !channel.waitForAuth || this.authState === this.AUTHENTICATED;\r\n\r\n  if (channel.state !== channel.UNSUBSCRIBED && meetsAuthRequirements) {\r\n    channel.state = channel.UNSUBSCRIBED;\r\n\r\n    channel.emit('subscribeFail', err, channelName, subscriptionOptions);\r\n    Emitter.prototype.emit.call(this, 'subscribeFail', err, channelName, subscriptionOptions);\r\n  }\r\n};\r\n\r\n// Cancel any pending subscribe callback\r\nSCClientSocket.prototype._cancelPendingSubscribeCallback = function (channel) {\r\n  if (channel._pendingSubscriptionCid != null) {\r\n    this.transport.cancelPendingResponse(channel._pendingSubscriptionCid);\r\n    delete channel._pendingSubscriptionCid;\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype._decorateChannelName = function (channelName) {\r\n  if (this.channelPrefix) {\r\n    channelName = this.channelPrefix + channelName;\r\n  }\r\n  return channelName;\r\n};\r\n\r\nSCClientSocket.prototype._undecorateChannelName = function (decoratedChannelName) {\r\n  if (this.channelPrefix && decoratedChannelName.indexOf(this.channelPrefix) === 0) {\r\n    return decoratedChannelName.replace(this.channelPrefix, '');\r\n  }\r\n  return decoratedChannelName;\r\n};\r\n\r\nSCClientSocket.prototype._trySubscribe = function (channel) {\r\n  var self = this;\r\n\r\n  var meetsAuthRequirements = !channel.waitForAuth || this.authState === this.AUTHENTICATED;\r\n\r\n  // We can only ever have one pending subscribe action at any given time on a channel\r\n  if (this.state === this.OPEN && !this.preparingPendingSubscriptions &&\r\n    channel._pendingSubscriptionCid == null && meetsAuthRequirements) {\r\n\r\n    var options = {\r\n      noTimeout: true\r\n    };\r\n\r\n    var subscriptionOptions = {\r\n      channel: this._decorateChannelName(channel.name)\r\n    };\r\n    if (channel.waitForAuth) {\r\n      options.waitForAuth = true;\r\n      subscriptionOptions.waitForAuth = options.waitForAuth;\r\n    }\r\n    if (channel.data) {\r\n      subscriptionOptions.data = channel.data;\r\n    }\r\n    if (channel.batch) {\r\n      options.batch = true;\r\n      subscriptionOptions.batch = true;\r\n    }\r\n\r\n    channel._pendingSubscriptionCid = this.transport.emit(\r\n      '#subscribe', subscriptionOptions, options,\r\n      function (err) {\r\n        delete channel._pendingSubscriptionCid;\r\n        if (err) {\r\n          self._triggerChannelSubscribeFail(err, channel, subscriptionOptions);\r\n        } else {\r\n          self._triggerChannelSubscribe(channel, subscriptionOptions);\r\n        }\r\n      }\r\n    );\r\n    Emitter.prototype.emit.call(this, 'subscribeRequest', channel.name, subscriptionOptions);\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype.subscribe = function (channelName, options) {\r\n  var channel = this.channels[channelName];\r\n\r\n  if (!channel) {\r\n    channel = new SCChannel(channelName, this, options);\r\n    this.channels[channelName] = channel;\r\n  } else if (options) {\r\n    channel.setOptions(options);\r\n  }\r\n\r\n  if (channel.state === channel.UNSUBSCRIBED) {\r\n    channel.state = channel.PENDING;\r\n    this._trySubscribe(channel);\r\n  }\r\n\r\n  return channel;\r\n};\r\n\r\nSCClientSocket.prototype._triggerChannelUnsubscribe = function (channel, newState) {\r\n  var channelName = channel.name;\r\n  var oldState = channel.state;\r\n\r\n  if (newState) {\r\n    channel.state = newState;\r\n  } else {\r\n    channel.state = channel.UNSUBSCRIBED;\r\n  }\r\n  this._cancelPendingSubscribeCallback(channel);\r\n\r\n  if (oldState === channel.SUBSCRIBED) {\r\n    var stateChangeData = {\r\n      channel: channelName,\r\n      oldState: oldState,\r\n      newState: channel.state\r\n    };\r\n    channel.emit('subscribeStateChange', stateChangeData);\r\n    channel.emit('unsubscribe', channelName);\r\n    Emitter.prototype.emit.call(this, 'subscribeStateChange', stateChangeData);\r\n    Emitter.prototype.emit.call(this, 'unsubscribe', channelName);\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype._tryUnsubscribe = function (channel) {\r\n  var self = this;\r\n\r\n  if (this.state === this.OPEN) {\r\n    var options = {\r\n      noTimeout: true\r\n    };\r\n    if (channel.batch) {\r\n      options.batch = true;\r\n    }\r\n    // If there is a pending subscribe action, cancel the callback\r\n    this._cancelPendingSubscribeCallback(channel);\r\n\r\n    // This operation cannot fail because the TCP protocol guarantees delivery\r\n    // so long as the connection remains open. If the connection closes,\r\n    // the server will automatically unsubscribe the client and thus complete\r\n    // the operation on the server side.\r\n    var decoratedChannelName = this._decorateChannelName(channel.name);\r\n    this.transport.emit('#unsubscribe', decoratedChannelName, options);\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype.unsubscribe = function (channelName) {\r\n  var channel = this.channels[channelName];\r\n\r\n  if (channel) {\r\n    if (channel.state !== channel.UNSUBSCRIBED) {\r\n      this._triggerChannelUnsubscribe(channel);\r\n      this._tryUnsubscribe(channel);\r\n    }\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype.channel = function (channelName, options) {\r\n  var currentChannel = this.channels[channelName];\r\n\r\n  if (!currentChannel) {\r\n    currentChannel = new SCChannel(channelName, this, options);\r\n    this.channels[channelName] = currentChannel;\r\n  }\r\n  return currentChannel;\r\n};\r\n\r\nSCClientSocket.prototype.destroyChannel = function (channelName) {\r\n  var channel = this.channels[channelName];\r\n\r\n  if (channel) {\r\n    channel.unwatch();\r\n    channel.unsubscribe();\r\n    delete this.channels[channelName];\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype.subscriptions = function (includePending) {\r\n  var subs = [];\r\n  var channel, includeChannel;\r\n  for (var channelName in this.channels) {\r\n    if (this.channels.hasOwnProperty(channelName)) {\r\n      channel = this.channels[channelName];\r\n\r\n      if (includePending) {\r\n        includeChannel = channel && (channel.state === channel.SUBSCRIBED ||\r\n          channel.state === channel.PENDING);\r\n      } else {\r\n        includeChannel = channel && channel.state === channel.SUBSCRIBED;\r\n      }\r\n\r\n      if (includeChannel) {\r\n        subs.push(channelName);\r\n      }\r\n    }\r\n  }\r\n  return subs;\r\n};\r\n\r\nSCClientSocket.prototype.isSubscribed = function (channelName, includePending) {\r\n  var channel = this.channels[channelName];\r\n  if (includePending) {\r\n    return !!channel && (channel.state === channel.SUBSCRIBED ||\r\n      channel.state === channel.PENDING);\r\n  }\r\n  return !!channel && channel.state === channel.SUBSCRIBED;\r\n};\r\n\r\nSCClientSocket.prototype.processPendingSubscriptions = function () {\r\n  var self = this;\r\n\r\n  this.preparingPendingSubscriptions = false;\r\n\r\n  var pendingChannels = [];\r\n\r\n  for (var i in this.channels) {\r\n    if (this.channels.hasOwnProperty(i)) {\r\n      var channel = this.channels[i];\r\n      if (channel.state === channel.PENDING) {\r\n        pendingChannels.push(channel);\r\n      }\r\n    }\r\n  }\r\n\r\n  pendingChannels.sort(function (a, b) {\r\n    var ap = a.priority || 0;\r\n    var bp = b.priority || 0;\r\n    if (ap > bp) {\r\n      return -1;\r\n    }\r\n    if (ap < bp) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  });\r\n\r\n  pendingChannels.forEach(function (channel) {\r\n    self._trySubscribe(channel);\r\n  });\r\n};\r\n\r\nSCClientSocket.prototype.watch = function (channelName, handler) {\r\n  if (typeof handler !== 'function') {\r\n    throw new InvalidArgumentsError('No handler function was provided');\r\n  }\r\n  this._channelEmitter.on(channelName, handler);\r\n};\r\n\r\nSCClientSocket.prototype.unwatch = function (channelName, handler) {\r\n  if (handler) {\r\n    this._channelEmitter.removeListener(channelName, handler);\r\n  } else {\r\n    this._channelEmitter.removeAllListeners(channelName);\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype.watchers = function (channelName) {\r\n  return this._channelEmitter.listeners(channelName);\r\n};\r\n\r\nmodule.exports = SCClientSocket;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":261,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":262,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":263,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":264,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":265,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":266,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":267,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":268,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":269,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":270,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":271,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":272,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":273,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":274,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":275,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":276,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":277,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":278,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":279,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":280,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":281,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":282,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":283,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":284,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":285,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":286,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":287,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":288,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":289,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":290,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":291,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":292,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":293,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":294,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":295,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":296,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":297,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":298,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":299,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":300,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":301,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":302,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":303,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":304,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":305,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":306,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":307,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":308,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":309,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":310,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":311,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":312,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":313,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":314,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":315,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":316,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":317,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":318,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":319,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":320,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":321,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":322,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":323,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":324,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":325,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":326,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":327,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":328,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":329,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":330,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":331,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":332,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":333,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":334,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":335,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":336,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":337,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":338,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":339,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":340,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":341,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":342,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":343,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":344,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":345,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":346,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":347,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":348,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":349,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":350,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":351,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":352,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":353,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":354,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":355,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":356,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":357,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":358,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":359,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":360,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":361,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":362,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":363,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":364,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":365,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":366,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":367,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":368,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":369,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":370,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":371,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":372,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":373,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":374,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":375,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":376,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":377,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":378,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":379,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":380,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":381,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":382,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":383,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":384,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":385,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":386,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":387,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":388,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":389,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":390,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":391,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":392,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":393,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":394,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":395,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":396,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":397,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":398,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":399,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":400,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":401,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":402,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":403,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":404,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":405,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":406,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":407,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":408,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":409,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":410,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":411,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":412,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":413,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":414,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":415,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":416,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":417,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":418,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":419,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":420,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":421,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":422,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":423,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":424,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":425,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":426,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":427,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":428,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":429,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":430,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":431,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":432,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":433,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":434,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":435,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":436,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":437,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":438,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":439,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":440,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":441,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":442,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":443,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":444,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":445,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":446,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":447,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":448,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":449,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":450,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":451,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":452,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":453,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":454,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":455,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":456,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":457,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":458,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":459,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":460,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":461,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":462,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":463,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":464,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":465,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":466,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":467,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":468,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":469,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":470,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":471,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":472,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":473,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":474,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":475,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":476,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":477,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":478,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":479,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":480,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":481,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":482,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":483,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":484,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":485,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":486,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":487,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":488,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":489,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":490,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":491,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":492,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":493,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":494,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":495,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":496,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":497,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":498,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":499,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":500,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":501,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":502,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":503,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":504,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":505,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":506,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":507,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":508,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":509,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":510,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":511,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":512,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":513,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":514,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":515,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":516,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":517,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":518,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":519,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":520,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":521,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":522,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":523,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":524,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":525,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":526,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":527,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":528,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":529,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":530,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":531,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":532,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":533,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":534,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":535,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":536,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":537,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":538,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":539,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":540,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":541,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":542,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":543,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":544,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":545,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":546,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":547,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":548,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":549,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":550,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":551,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":552,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":553,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":554,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":555,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":556,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":557,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":558,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":559,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":560,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":561,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":562,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":563,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":564,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":565,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":566,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":567,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":568,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":569,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":570,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":571,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":572,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":573,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":574,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":575,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":576,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":577,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":578,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":579,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":580,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":581,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":582,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":583,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":584,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":585,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":586,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":587,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":588,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":589,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":590,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":591,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":592,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":593,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":594,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":595,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":596,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":597,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":598,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":599,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":600,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":601,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":602,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":603,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":604,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":605,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":606,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":607,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":608,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":609,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":610,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":611,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":612,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":613,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":614,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":615,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":616,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":617,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":618,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":619,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":620,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":621,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":622,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":623,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":624,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":625,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":626,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":627,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":628,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":629,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":630,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":631,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":632,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":633,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":634,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":635,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":636,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":637,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":638,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":639,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":640,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":641,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":642,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":643,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":644,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":645,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":646,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":647,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":648,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":649,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":650,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":651,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":652,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":653,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":654,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":655,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":656,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":657,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":658,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":659,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":660,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":661,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":662,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":663,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":664,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":665,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":666,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":667,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":668,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":669,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":670,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":671,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":672,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":673,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":674,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":675,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":676,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":677,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":678,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":679,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":680,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":681,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":682,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":683,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":684,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":685,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":686,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":687,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":688,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":689,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":690,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":691,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":692,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":693,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":694,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":695,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":696,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":697,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":698,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":699,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":700,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":701,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":702,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":703,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":704,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":705,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":706,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":707,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":708,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":709,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":710,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":711,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":712,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":713,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":714,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":715,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":716,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":717,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":718,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":719,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":720,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":721,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":722,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":723,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":724,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":725,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":726,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":727,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":728,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":729,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":730,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":731,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":732,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":733,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":734,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":735,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":736,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":737,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":738,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":739,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":740,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":741,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":742,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":743,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":744,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":745,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":746,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":747,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":748,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":749,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":750,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":751,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":752,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":753,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":754,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":755,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":756,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":757,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":758,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":759,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":760,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":761,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":762,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":763,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":764,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":765,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":766,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":767,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":768,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":769,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":770,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":771,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":772,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":773,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":774,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":775,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":776,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":777,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":778,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":779,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":780,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":781,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":782,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":783,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":784,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":785,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":786,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":787,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":788,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":789,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":790,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":791,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":792,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":793,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":794,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":795,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":796,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":797,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":798,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":799,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":800,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":801,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":802,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":803,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":804,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":805,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":806,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":807,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":808,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":809,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":810,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":811,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":812,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":813,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":814,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":815,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":816,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":817,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":818,"column":0},"generated":{"line":820,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":819,"column":0},"generated":{"line":821,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":820,"column":0},"generated":{"line":822,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":821,"column":0},"generated":{"line":823,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":822,"column":0},"generated":{"line":824,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":823,"column":0},"generated":{"line":825,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":824,"column":0},"generated":{"line":826,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":825,"column":0},"generated":{"line":827,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":826,"column":0},"generated":{"line":828,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":827,"column":0},"generated":{"line":829,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":828,"column":0},"generated":{"line":830,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":829,"column":0},"generated":{"line":831,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":830,"column":0},"generated":{"line":832,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":831,"column":0},"generated":{"line":833,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":832,"column":0},"generated":{"line":834,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":833,"column":0},"generated":{"line":835,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":834,"column":0},"generated":{"line":836,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":835,"column":0},"generated":{"line":837,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":836,"column":0},"generated":{"line":838,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":837,"column":0},"generated":{"line":839,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":838,"column":0},"generated":{"line":840,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":839,"column":0},"generated":{"line":841,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":840,"column":0},"generated":{"line":842,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":841,"column":0},"generated":{"line":843,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":842,"column":0},"generated":{"line":844,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":843,"column":0},"generated":{"line":845,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":844,"column":0},"generated":{"line":846,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":845,"column":0},"generated":{"line":847,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":846,"column":0},"generated":{"line":848,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":847,"column":0},"generated":{"line":849,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":848,"column":0},"generated":{"line":850,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":849,"column":0},"generated":{"line":851,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":850,"column":0},"generated":{"line":852,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":851,"column":0},"generated":{"line":853,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":852,"column":0},"generated":{"line":854,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":853,"column":0},"generated":{"line":855,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":854,"column":0},"generated":{"line":856,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":855,"column":0},"generated":{"line":857,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":856,"column":0},"generated":{"line":858,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":857,"column":0},"generated":{"line":859,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":858,"column":0},"generated":{"line":860,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":859,"column":0},"generated":{"line":861,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":860,"column":0},"generated":{"line":862,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":861,"column":0},"generated":{"line":863,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":862,"column":0},"generated":{"line":864,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":863,"column":0},"generated":{"line":865,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":864,"column":0},"generated":{"line":866,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":865,"column":0},"generated":{"line":867,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":866,"column":0},"generated":{"line":868,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":867,"column":0},"generated":{"line":869,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":868,"column":0},"generated":{"line":870,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":869,"column":0},"generated":{"line":871,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":870,"column":0},"generated":{"line":872,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":871,"column":0},"generated":{"line":873,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":872,"column":0},"generated":{"line":874,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":873,"column":0},"generated":{"line":875,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":874,"column":0},"generated":{"line":876,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":875,"column":0},"generated":{"line":877,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":876,"column":0},"generated":{"line":878,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":877,"column":0},"generated":{"line":879,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":878,"column":0},"generated":{"line":880,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":879,"column":0},"generated":{"line":881,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":880,"column":0},"generated":{"line":882,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":881,"column":0},"generated":{"line":883,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":882,"column":0},"generated":{"line":884,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":883,"column":0},"generated":{"line":885,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":884,"column":0},"generated":{"line":886,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":885,"column":0},"generated":{"line":887,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":886,"column":0},"generated":{"line":888,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":887,"column":0},"generated":{"line":889,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":888,"column":0},"generated":{"line":890,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":889,"column":0},"generated":{"line":891,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":890,"column":0},"generated":{"line":892,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":891,"column":0},"generated":{"line":893,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":892,"column":0},"generated":{"line":894,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":893,"column":0},"generated":{"line":895,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":894,"column":0},"generated":{"line":896,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":895,"column":0},"generated":{"line":897,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":896,"column":0},"generated":{"line":898,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":897,"column":0},"generated":{"line":899,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":898,"column":0},"generated":{"line":900,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":899,"column":0},"generated":{"line":901,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":900,"column":0},"generated":{"line":902,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":901,"column":0},"generated":{"line":903,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":902,"column":0},"generated":{"line":904,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":903,"column":0},"generated":{"line":905,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":904,"column":0},"generated":{"line":906,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":905,"column":0},"generated":{"line":907,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":906,"column":0},"generated":{"line":908,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":907,"column":0},"generated":{"line":909,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":908,"column":0},"generated":{"line":910,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":909,"column":0},"generated":{"line":911,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":910,"column":0},"generated":{"line":912,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":911,"column":0},"generated":{"line":913,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":912,"column":0},"generated":{"line":914,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":913,"column":0},"generated":{"line":915,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":914,"column":0},"generated":{"line":916,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":915,"column":0},"generated":{"line":917,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":916,"column":0},"generated":{"line":918,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":917,"column":0},"generated":{"line":919,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":918,"column":0},"generated":{"line":920,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":919,"column":0},"generated":{"line":921,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":920,"column":0},"generated":{"line":922,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":921,"column":0},"generated":{"line":923,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":922,"column":0},"generated":{"line":924,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":923,"column":0},"generated":{"line":925,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":924,"column":0},"generated":{"line":926,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":925,"column":0},"generated":{"line":927,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":926,"column":0},"generated":{"line":928,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":927,"column":0},"generated":{"line":929,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":928,"column":0},"generated":{"line":930,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":929,"column":0},"generated":{"line":931,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":930,"column":0},"generated":{"line":932,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":931,"column":0},"generated":{"line":933,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":932,"column":0},"generated":{"line":934,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":933,"column":0},"generated":{"line":935,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":934,"column":0},"generated":{"line":936,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":935,"column":0},"generated":{"line":937,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":936,"column":0},"generated":{"line":938,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":937,"column":0},"generated":{"line":939,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":938,"column":0},"generated":{"line":940,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":939,"column":0},"generated":{"line":941,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":940,"column":0},"generated":{"line":942,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":941,"column":0},"generated":{"line":943,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":942,"column":0},"generated":{"line":944,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":943,"column":0},"generated":{"line":945,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":944,"column":0},"generated":{"line":946,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":945,"column":0},"generated":{"line":947,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":946,"column":0},"generated":{"line":948,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":947,"column":0},"generated":{"line":949,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":948,"column":0},"generated":{"line":950,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":949,"column":0},"generated":{"line":951,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":950,"column":0},"generated":{"line":952,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":951,"column":0},"generated":{"line":953,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":952,"column":0},"generated":{"line":954,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":953,"column":0},"generated":{"line":955,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":954,"column":0},"generated":{"line":956,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":955,"column":0},"generated":{"line":957,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":956,"column":0},"generated":{"line":958,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":957,"column":0},"generated":{"line":959,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":958,"column":0},"generated":{"line":960,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":959,"column":0},"generated":{"line":961,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":960,"column":0},"generated":{"line":962,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":961,"column":0},"generated":{"line":963,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":962,"column":0},"generated":{"line":964,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":963,"column":0},"generated":{"line":965,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":964,"column":0},"generated":{"line":966,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":965,"column":0},"generated":{"line":967,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":966,"column":0},"generated":{"line":968,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":967,"column":0},"generated":{"line":969,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":968,"column":0},"generated":{"line":970,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":969,"column":0},"generated":{"line":971,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":970,"column":0},"generated":{"line":972,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":971,"column":0},"generated":{"line":973,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":972,"column":0},"generated":{"line":974,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":973,"column":0},"generated":{"line":975,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":974,"column":0},"generated":{"line":976,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":975,"column":0},"generated":{"line":977,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":976,"column":0},"generated":{"line":978,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":977,"column":0},"generated":{"line":979,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":978,"column":0},"generated":{"line":980,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":979,"column":0},"generated":{"line":981,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":980,"column":0},"generated":{"line":982,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":981,"column":0},"generated":{"line":983,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":982,"column":0},"generated":{"line":984,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":983,"column":0},"generated":{"line":985,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":984,"column":0},"generated":{"line":986,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":985,"column":0},"generated":{"line":987,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":986,"column":0},"generated":{"line":988,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":987,"column":0},"generated":{"line":989,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":988,"column":0},"generated":{"line":990,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":989,"column":0},"generated":{"line":991,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":990,"column":0},"generated":{"line":992,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":991,"column":0},"generated":{"line":993,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":992,"column":0},"generated":{"line":994,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":993,"column":0},"generated":{"line":995,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":994,"column":0},"generated":{"line":996,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":995,"column":0},"generated":{"line":997,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":996,"column":0},"generated":{"line":998,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":997,"column":0},"generated":{"line":999,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":998,"column":0},"generated":{"line":1000,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":999,"column":0},"generated":{"line":1001,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":1000,"column":0},"generated":{"line":1002,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":1001,"column":0},"generated":{"line":1003,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":1002,"column":0},"generated":{"line":1004,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":1003,"column":0},"generated":{"line":1005,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":1004,"column":0},"generated":{"line":1006,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":1005,"column":0},"generated":{"line":1007,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":1006,"column":0},"generated":{"line":1008,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":1007,"column":0},"generated":{"line":1009,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":1008,"column":0},"generated":{"line":1010,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":1009,"column":0},"generated":{"line":1011,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":1010,"column":0},"generated":{"line":1012,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":1011,"column":0},"generated":{"line":1013,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":1012,"column":0},"generated":{"line":1014,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":1013,"column":0},"generated":{"line":1015,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":1014,"column":0},"generated":{"line":1016,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":1015,"column":0},"generated":{"line":1017,"column":0}},{"source":"../node_modules/socketcluster-client/lib/scclientsocket.js","original":{"line":1016,"column":0},"generated":{"line":1018,"column":0}}],"sources":{"../node_modules/socketcluster-client/lib/scclientsocket.js":"var Emitter = require('component-emitter');\r\nvar SCChannel = require('sc-channel').SCChannel;\r\nvar Response = require('./response').Response;\r\nvar AuthEngine = require('./auth').AuthEngine;\r\nvar formatter = require('sc-formatter');\r\nvar SCTransport = require('./sctransport').SCTransport;\r\nvar querystring = require('querystring');\r\nvar LinkedList = require('linked-list');\r\nvar Buffer = require('buffer/').Buffer;\r\nvar clone = require('clone');\r\n\r\nvar scErrors = require('sc-errors');\r\nvar InvalidArgumentsError = scErrors.InvalidArgumentsError;\r\nvar InvalidMessageError = scErrors.InvalidMessageError;\r\nvar InvalidActionError = scErrors.InvalidActionError;\r\nvar SocketProtocolError = scErrors.SocketProtocolError;\r\nvar TimeoutError = scErrors.TimeoutError;\r\nvar BadConnectionError = scErrors.BadConnectionError;\r\n\r\nvar isBrowser = typeof window !== 'undefined';\r\n\r\n\r\nvar SCClientSocket = function (opts) {\r\n  var self = this;\r\n\r\n  Emitter.call(this);\r\n\r\n  this.id = null;\r\n  this.state = this.CLOSED;\r\n  this.authState = this.UNAUTHENTICATED;\r\n  this.signedAuthToken = null;\r\n  this.authToken = null;\r\n  this.pendingReconnect = false;\r\n  this.pendingReconnectTimeout = null;\r\n  this.preparingPendingSubscriptions = false;\r\n  this.clientId = opts.clientId;\r\n\r\n  this.connectTimeout = opts.connectTimeout;\r\n  this.ackTimeout = opts.ackTimeout;\r\n  this.channelPrefix = opts.channelPrefix || null;\r\n  this.disconnectOnUnload = opts.disconnectOnUnload == null ? true : opts.disconnectOnUnload;\r\n  this.authTokenName = opts.authTokenName;\r\n\r\n  // pingTimeout will be ackTimeout at the start, but it will\r\n  // be updated with values provided by the 'connect' event\r\n  this.pingTimeout = this.ackTimeout;\r\n  this.pingTimeoutDisabled = !!opts.pingTimeoutDisabled;\r\n  this.active = true;\r\n\r\n  this._clientMap = opts.clientMap || {};\r\n\r\n  var maxTimeout = Math.pow(2, 31) - 1;\r\n\r\n  var verifyDuration = function (propertyName) {\r\n    if (self[propertyName] > maxTimeout) {\r\n      throw new InvalidArgumentsError('The ' + propertyName +\r\n        ' value provided exceeded the maximum amount allowed');\r\n    }\r\n  };\r\n\r\n  verifyDuration('connectTimeout');\r\n  verifyDuration('ackTimeout');\r\n\r\n  this._localEvents = {\r\n    'connect': 1,\r\n    'connectAbort': 1,\r\n    'close': 1,\r\n    'disconnect': 1,\r\n    'message': 1,\r\n    'error': 1,\r\n    'raw': 1,\r\n    'kickOut': 1,\r\n    'subscribe': 1,\r\n    'unsubscribe': 1,\r\n    'subscribeStateChange': 1,\r\n    'authStateChange': 1,\r\n    'authenticate': 1,\r\n    'deauthenticate': 1,\r\n    'removeAuthToken': 1,\r\n    'subscribeRequest': 1\r\n  };\r\n\r\n  this.connectAttempts = 0;\r\n\r\n  this._emitBuffer = new LinkedList();\r\n  this.channels = {};\r\n\r\n  this.options = opts;\r\n\r\n  this._cid = 1;\r\n\r\n  this.options.callIdGenerator = function () {\r\n    return self._cid++;\r\n  };\r\n\r\n  if (this.options.autoReconnect) {\r\n    if (this.options.autoReconnectOptions == null) {\r\n      this.options.autoReconnectOptions = {};\r\n    }\r\n\r\n    // Add properties to the this.options.autoReconnectOptions object.\r\n    // We assign the reference to a reconnectOptions variable to avoid repetition.\r\n    var reconnectOptions = this.options.autoReconnectOptions;\r\n    if (reconnectOptions.initialDelay == null) {\r\n      reconnectOptions.initialDelay = 10000;\r\n    }\r\n    if (reconnectOptions.randomness == null) {\r\n      reconnectOptions.randomness = 10000;\r\n    }\r\n    if (reconnectOptions.multiplier == null) {\r\n      reconnectOptions.multiplier = 1.5;\r\n    }\r\n    if (reconnectOptions.maxDelay == null) {\r\n      reconnectOptions.maxDelay = 60000;\r\n    }\r\n  }\r\n\r\n  if (this.options.subscriptionRetryOptions == null) {\r\n    this.options.subscriptionRetryOptions = {};\r\n  }\r\n\r\n  if (this.options.authEngine) {\r\n    this.auth = this.options.authEngine;\r\n  } else {\r\n    this.auth = new AuthEngine();\r\n  }\r\n\r\n  if (this.options.codecEngine) {\r\n    this.codec = this.options.codecEngine;\r\n  } else {\r\n    // Default codec engine\r\n    this.codec = formatter;\r\n  }\r\n\r\n  if (this.options.protocol) {\r\n    var protocolOptionError = new InvalidArgumentsError('The \"protocol\" option' +\r\n      ' does not affect socketcluster-client. If you want to utilize SSL/TLS' +\r\n      ' - use \"secure\" option instead');\r\n    this._onSCError(protocolOptionError);\r\n  }\r\n\r\n  this.options.path = this.options.path.replace(/\\/$/, '') + '/';\r\n\r\n  this.options.query = opts.query || {};\r\n  if (typeof this.options.query === 'string') {\r\n    this.options.query = querystring.parse(this.options.query);\r\n  }\r\n\r\n  this._channelEmitter = new Emitter();\r\n\r\n  this._unloadHandler = function () {\r\n    self.disconnect();\r\n  };\r\n\r\n  if (isBrowser && this.disconnectOnUnload && global.addEventListener) {\r\n    global.addEventListener('beforeunload', this._unloadHandler, false);\r\n  }\r\n  this._clientMap[this.clientId] = this;\r\n\r\n  if (this.options.autoConnect) {\r\n    this.connect();\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype = Object.create(Emitter.prototype);\r\n\r\nSCClientSocket.CONNECTING = SCClientSocket.prototype.CONNECTING = SCTransport.prototype.CONNECTING;\r\nSCClientSocket.OPEN = SCClientSocket.prototype.OPEN = SCTransport.prototype.OPEN;\r\nSCClientSocket.CLOSED = SCClientSocket.prototype.CLOSED = SCTransport.prototype.CLOSED;\r\n\r\nSCClientSocket.AUTHENTICATED = SCClientSocket.prototype.AUTHENTICATED = 'authenticated';\r\nSCClientSocket.UNAUTHENTICATED = SCClientSocket.prototype.UNAUTHENTICATED = 'unauthenticated';\r\n\r\nSCClientSocket.PENDING = SCClientSocket.prototype.PENDING = 'pending';\r\n\r\nSCClientSocket.ignoreStatuses = scErrors.socketProtocolIgnoreStatuses;\r\nSCClientSocket.errorStatuses = scErrors.socketProtocolErrorStatuses;\r\n\r\nSCClientSocket.prototype._privateEventHandlerMap = {\r\n  '#publish': function (data) {\r\n    var undecoratedChannelName = this._undecorateChannelName(data.channel);\r\n    var isSubscribed = this.isSubscribed(undecoratedChannelName, true);\r\n\r\n    if (isSubscribed) {\r\n      this._channelEmitter.emit(undecoratedChannelName, data.data);\r\n    }\r\n  },\r\n  '#kickOut': function (data) {\r\n    var undecoratedChannelName = this._undecorateChannelName(data.channel);\r\n    var channel = this.channels[undecoratedChannelName];\r\n    if (channel) {\r\n      Emitter.prototype.emit.call(this, 'kickOut', data.message, undecoratedChannelName);\r\n      channel.emit('kickOut', data.message, undecoratedChannelName);\r\n      this._triggerChannelUnsubscribe(channel);\r\n    }\r\n  },\r\n  '#setAuthToken': function (data, response) {\r\n    var self = this;\r\n\r\n    if (data) {\r\n      var triggerAuthenticate = function (err) {\r\n        if (err) {\r\n          // This is a non-fatal error, we don't want to close the connection\r\n          // because of this but we do want to notify the server and throw an error\r\n          // on the client.\r\n          response.error(err);\r\n          self._onSCError(err);\r\n        } else {\r\n          self._changeToAuthenticatedState(data.token);\r\n          response.end();\r\n        }\r\n      };\r\n\r\n      this.auth.saveToken(this.authTokenName, data.token, {}, triggerAuthenticate);\r\n    } else {\r\n      response.error(new InvalidMessageError('No token data provided by #setAuthToken event'));\r\n    }\r\n  },\r\n  '#removeAuthToken': function (data, response) {\r\n    var self = this;\r\n\r\n    this.auth.removeToken(this.authTokenName, function (err, oldToken) {\r\n      if (err) {\r\n        // Non-fatal error - Do not close the connection\r\n        response.error(err);\r\n        self._onSCError(err);\r\n      } else {\r\n        Emitter.prototype.emit.call(self, 'removeAuthToken', oldToken);\r\n        self._changeToUnauthenticatedStateAndClearTokens();\r\n        response.end();\r\n      }\r\n    });\r\n  },\r\n  '#disconnect': function (data) {\r\n    this.transport.close(data.code, data.data);\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype.getState = function () {\r\n  return this.state;\r\n};\r\n\r\nSCClientSocket.prototype.getBytesReceived = function () {\r\n  return this.transport.getBytesReceived();\r\n};\r\n\r\nSCClientSocket.prototype.deauthenticate = function (callback) {\r\n  var self = this;\r\n\r\n  this.auth.removeToken(this.authTokenName, function (err, oldToken) {\r\n    if (err) {\r\n      // Non-fatal error - Do not close the connection\r\n      self._onSCError(err);\r\n    } else {\r\n      Emitter.prototype.emit.call(self, 'removeAuthToken', oldToken);\r\n      if (self.state !== self.CLOSED) {\r\n        self.emit('#removeAuthToken');\r\n      }\r\n      self._changeToUnauthenticatedStateAndClearTokens();\r\n    }\r\n    callback && callback(err);\r\n  });\r\n};\r\n\r\nSCClientSocket.prototype.connect = SCClientSocket.prototype.open = function () {\r\n  var self = this;\r\n\r\n  if (!this.active) {\r\n    var error = new InvalidActionError('Cannot connect a destroyed client');\r\n    this._onSCError(error);\r\n    return;\r\n  }\r\n\r\n  if (this.state === this.CLOSED) {\r\n    this.pendingReconnect = false;\r\n    this.pendingReconnectTimeout = null;\r\n    clearTimeout(this._reconnectTimeoutRef);\r\n\r\n    this.state = this.CONNECTING;\r\n    Emitter.prototype.emit.call(this, 'connecting');\r\n\r\n    if (this.transport) {\r\n      this.transport.off();\r\n    }\r\n\r\n    this.transport = new SCTransport(this.auth, this.codec, this.options);\r\n\r\n    this.transport.on('open', function (status) {\r\n      self.state = self.OPEN;\r\n      self._onSCOpen(status);\r\n    });\r\n\r\n    this.transport.on('error', function (err) {\r\n      self._onSCError(err);\r\n    });\r\n\r\n    this.transport.on('close', function (code, data) {\r\n      self.state = self.CLOSED;\r\n      self._onSCClose(code, data);\r\n    });\r\n\r\n    this.transport.on('openAbort', function (code, data) {\r\n      self.state = self.CLOSED;\r\n      self._onSCClose(code, data, true);\r\n    });\r\n\r\n    this.transport.on('event', function (event, data, res) {\r\n      self._onSCEvent(event, data, res);\r\n    });\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype.reconnect = function (code, data) {\r\n  this.disconnect(code, data);\r\n  this.connect();\r\n};\r\n\r\nSCClientSocket.prototype.disconnect = function (code, data) {\r\n  code = code || 1000;\r\n\r\n  if (typeof code !== 'number') {\r\n    throw new InvalidArgumentsError('If specified, the code argument must be a number');\r\n  }\r\n\r\n  if (this.state === this.OPEN || this.state === this.CONNECTING) {\r\n    this.transport.close(code, data);\r\n  } else {\r\n    this.pendingReconnect = false;\r\n    this.pendingReconnectTimeout = null;\r\n    clearTimeout(this._reconnectTimeoutRef);\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype.destroy = function (code, data) {\r\n  if (isBrowser && global.removeEventListener) {\r\n    global.removeEventListener('beforeunload', this._unloadHandler, false);\r\n  }\r\n  this.active = false;\r\n  this.disconnect(code, data);\r\n  delete this._clientMap[this.clientId];\r\n};\r\n\r\nSCClientSocket.prototype._changeToUnauthenticatedStateAndClearTokens = function () {\r\n  if (this.authState !== this.UNAUTHENTICATED) {\r\n    var oldState = this.authState;\r\n    var oldSignedToken = this.signedAuthToken;\r\n    this.authState = this.UNAUTHENTICATED;\r\n    this.signedAuthToken = null;\r\n    this.authToken = null;\r\n\r\n    var stateChangeData = {\r\n      oldState: oldState,\r\n      newState: this.authState\r\n    };\r\n    Emitter.prototype.emit.call(this, 'authStateChange', stateChangeData);\r\n    Emitter.prototype.emit.call(this, 'deauthenticate', oldSignedToken);\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype._changeToAuthenticatedState = function (signedAuthToken) {\r\n  this.signedAuthToken = signedAuthToken;\r\n  this.authToken = this._extractAuthTokenData(signedAuthToken);\r\n\r\n  if (this.authState !== this.AUTHENTICATED) {\r\n    var oldState = this.authState;\r\n    this.authState = this.AUTHENTICATED;\r\n    var stateChangeData = {\r\n      oldState: oldState,\r\n      newState: this.authState,\r\n      signedAuthToken: signedAuthToken,\r\n      authToken: this.authToken\r\n    };\r\n    if (!this.preparingPendingSubscriptions) {\r\n      this.processPendingSubscriptions();\r\n    }\r\n\r\n    Emitter.prototype.emit.call(this, 'authStateChange', stateChangeData);\r\n  }\r\n  Emitter.prototype.emit.call(this, 'authenticate', signedAuthToken);\r\n};\r\n\r\nSCClientSocket.prototype.decodeBase64 = function (encodedString) {\r\n  return Buffer.from(encodedString, 'base64').toString('utf8');\r\n};\r\n\r\nSCClientSocket.prototype.encodeBase64 = function (decodedString) {\r\n  return Buffer.from(decodedString, 'utf8').toString('base64');\r\n};\r\n\r\nSCClientSocket.prototype._extractAuthTokenData = function (signedAuthToken) {\r\n  var tokenParts = (signedAuthToken || '').split('.');\r\n  var encodedTokenData = tokenParts[1];\r\n  if (encodedTokenData != null) {\r\n    var tokenData = encodedTokenData;\r\n    try {\r\n      tokenData = this.decodeBase64(tokenData);\r\n      return JSON.parse(tokenData);\r\n    } catch (e) {\r\n      return tokenData;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nSCClientSocket.prototype.getAuthToken = function () {\r\n  return this.authToken;\r\n};\r\n\r\nSCClientSocket.prototype.getSignedAuthToken = function () {\r\n  return this.signedAuthToken;\r\n};\r\n\r\n// Perform client-initiated authentication by providing an encrypted token string.\r\nSCClientSocket.prototype.authenticate = function (signedAuthToken, callback) {\r\n  var self = this;\r\n\r\n  this.emit('#authenticate', signedAuthToken, function (err, authStatus) {\r\n    if (authStatus && authStatus.isAuthenticated != null) {\r\n      // If authStatus is correctly formatted (has an isAuthenticated property),\r\n      // then we will rehydrate the authError.\r\n      if (authStatus.authError) {\r\n        authStatus.authError = scErrors.hydrateError(authStatus.authError);\r\n      }\r\n    } else {\r\n      // Some errors like BadConnectionError and TimeoutError will not pass a valid\r\n      // authStatus object to the current function, so we need to create it ourselves.\r\n      authStatus = {\r\n        isAuthenticated: self.authState,\r\n        authError: null\r\n      };\r\n    }\r\n    if (err) {\r\n      if (err.name !== 'BadConnectionError' && err.name !== 'TimeoutError') {\r\n        // In case of a bad/closed connection or a timeout, we maintain the last\r\n        // known auth state since those errors don't mean that the token is invalid.\r\n\r\n        self._changeToUnauthenticatedStateAndClearTokens();\r\n      }\r\n      callback && callback(err, authStatus);\r\n    } else {\r\n      self.auth.saveToken(self.authTokenName, signedAuthToken, {}, function (err) {\r\n        if (err) {\r\n          self._onSCError(err);\r\n        }\r\n        if (authStatus.isAuthenticated) {\r\n          self._changeToAuthenticatedState(signedAuthToken);\r\n        } else {\r\n          self._changeToUnauthenticatedStateAndClearTokens();\r\n        }\r\n        callback && callback(err, authStatus);\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nSCClientSocket.prototype._tryReconnect = function (initialDelay) {\r\n  var self = this;\r\n\r\n  var exponent = this.connectAttempts++;\r\n  var reconnectOptions = this.options.autoReconnectOptions;\r\n  var timeout;\r\n\r\n  if (initialDelay == null || exponent > 0) {\r\n    var initialTimeout = Math.round(reconnectOptions.initialDelay + (reconnectOptions.randomness || 0) * Math.random());\r\n\r\n    timeout = Math.round(initialTimeout * Math.pow(reconnectOptions.multiplier, exponent));\r\n  } else {\r\n    timeout = initialDelay;\r\n  }\r\n\r\n  if (timeout > reconnectOptions.maxDelay) {\r\n    timeout = reconnectOptions.maxDelay;\r\n  }\r\n\r\n  clearTimeout(this._reconnectTimeoutRef);\r\n\r\n  this.pendingReconnect = true;\r\n  this.pendingReconnectTimeout = timeout;\r\n  this._reconnectTimeoutRef = setTimeout(function () {\r\n    self.connect();\r\n  }, timeout);\r\n};\r\n\r\nSCClientSocket.prototype._onSCOpen = function (status) {\r\n  var self = this;\r\n\r\n  this.preparingPendingSubscriptions = true;\r\n\r\n  if (status) {\r\n    this.id = status.id;\r\n    this.pingTimeout = status.pingTimeout;\r\n    this.transport.pingTimeout = this.pingTimeout;\r\n    if (status.isAuthenticated) {\r\n      this._changeToAuthenticatedState(status.authToken);\r\n    } else {\r\n      this._changeToUnauthenticatedStateAndClearTokens();\r\n    }\r\n  } else {\r\n    // This can happen if auth.loadToken (in sctransport.js) fails with\r\n    // an error - This means that the signedAuthToken cannot be loaded by\r\n    // the auth engine and therefore, we need to unauthenticate the client.\r\n    this._changeToUnauthenticatedStateAndClearTokens();\r\n  }\r\n\r\n  this.connectAttempts = 0;\r\n\r\n  if (this.options.autoSubscribeOnConnect) {\r\n    this.processPendingSubscriptions();\r\n  }\r\n\r\n  // If the user invokes the callback while in autoSubscribeOnConnect mode, it\r\n  // won't break anything.\r\n  Emitter.prototype.emit.call(this, 'connect', status, function () {\r\n    self.processPendingSubscriptions();\r\n  });\r\n\r\n  if (this.state === this.OPEN) {\r\n    this._flushEmitBuffer();\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype._onSCError = function (err) {\r\n  var self = this;\r\n\r\n  // Throw error in different stack frame so that error handling\r\n  // cannot interfere with a reconnect action.\r\n  setTimeout(function () {\r\n    if (self.listeners('error').length < 1) {\r\n      throw err;\r\n    } else {\r\n      Emitter.prototype.emit.call(self, 'error', err);\r\n    }\r\n  }, 0);\r\n};\r\n\r\nSCClientSocket.prototype._suspendSubscriptions = function () {\r\n  var channel, newState;\r\n  for (var channelName in this.channels) {\r\n    if (this.channels.hasOwnProperty(channelName)) {\r\n      channel = this.channels[channelName];\r\n      if (channel.state === channel.SUBSCRIBED ||\r\n        channel.state === channel.PENDING) {\r\n\r\n        newState = channel.PENDING;\r\n      } else {\r\n        newState = channel.UNSUBSCRIBED;\r\n      }\r\n\r\n      this._triggerChannelUnsubscribe(channel, newState);\r\n    }\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype._abortAllPendingEventsDueToBadConnection = function (failureType) {\r\n  var currentNode = this._emitBuffer.head;\r\n  var nextNode;\r\n\r\n  while (currentNode) {\r\n    nextNode = currentNode.next;\r\n    var eventObject = currentNode.data;\r\n    clearTimeout(eventObject.timeout);\r\n    delete eventObject.timeout;\r\n    currentNode.detach();\r\n    currentNode = nextNode;\r\n\r\n    var callback = eventObject.callback;\r\n    if (callback) {\r\n      delete eventObject.callback;\r\n      var errorMessage = \"Event '\" + eventObject.event +\r\n        \"' was aborted due to a bad connection\";\r\n      var error = new BadConnectionError(errorMessage, failureType);\r\n      callback.call(eventObject, error, eventObject);\r\n    }\r\n    // Cleanup any pending response callback in the transport layer too.\r\n    if (eventObject.cid) {\r\n      this.transport.cancelPendingResponse(eventObject.cid);\r\n    }\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype._onSCClose = function (code, data, openAbort) {\r\n  var self = this;\r\n\r\n  this.id = null;\r\n\r\n  if (this.transport) {\r\n    this.transport.off();\r\n  }\r\n  this.pendingReconnect = false;\r\n  this.pendingReconnectTimeout = null;\r\n  clearTimeout(this._reconnectTimeoutRef);\r\n\r\n  this._suspendSubscriptions();\r\n  this._abortAllPendingEventsDueToBadConnection(openAbort ? 'connectAbort' : 'disconnect');\r\n\r\n  // Try to reconnect\r\n  // on server ping timeout (4000)\r\n  // or on client pong timeout (4001)\r\n  // or on close without status (1005)\r\n  // or on handshake failure (4003)\r\n  // or on handshake rejection (4008)\r\n  // or on socket hung up (1006)\r\n  if (this.options.autoReconnect) {\r\n    if (code === 4000 || code === 4001 || code === 1005) {\r\n      // If there is a ping or pong timeout or socket closes without\r\n      // status, don't wait before trying to reconnect - These could happen\r\n      // if the client wakes up after a period of inactivity and in this case we\r\n      // want to re-establish the connection as soon as possible.\r\n      this._tryReconnect(0);\r\n\r\n      // Codes 4500 and above will be treated as permanent disconnects.\r\n      // Socket will not try to auto-reconnect.\r\n    } else if (code !== 1000 && code < 4500) {\r\n      this._tryReconnect();\r\n    }\r\n  }\r\n\r\n  if (openAbort) {\r\n    Emitter.prototype.emit.call(self, 'connectAbort', code, data);\r\n  } else {\r\n    Emitter.prototype.emit.call(self, 'disconnect', code, data);\r\n  }\r\n  Emitter.prototype.emit.call(self, 'close', code, data);\r\n\r\n  if (!SCClientSocket.ignoreStatuses[code]) {\r\n    var closeMessage;\r\n    if (data) {\r\n      closeMessage = 'Socket connection closed with status code ' + code + ' and reason: ' + data;\r\n    } else {\r\n      closeMessage = 'Socket connection closed with status code ' + code;\r\n    }\r\n    var err = new SocketProtocolError(SCClientSocket.errorStatuses[code] || closeMessage, code);\r\n    this._onSCError(err);\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype._onSCEvent = function (event, data, res) {\r\n  var handler = this._privateEventHandlerMap[event];\r\n  if (handler) {\r\n    handler.call(this, data, res);\r\n  } else {\r\n    Emitter.prototype.emit.call(this, event, data, function () {\r\n      res && res.callback.apply(res, arguments);\r\n    });\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype.decode = function (message) {\r\n  return this.transport.decode(message);\r\n};\r\n\r\nSCClientSocket.prototype.encode = function (object) {\r\n  return this.transport.encode(object);\r\n};\r\n\r\nSCClientSocket.prototype._flushEmitBuffer = function () {\r\n  var currentNode = this._emitBuffer.head;\r\n  var nextNode;\r\n\r\n  while (currentNode) {\r\n    nextNode = currentNode.next;\r\n    var eventObject = currentNode.data;\r\n    currentNode.detach();\r\n    this.transport.emitObject(eventObject);\r\n    currentNode = nextNode;\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype._handleEventAckTimeout = function (eventObject, eventNode) {\r\n  if (eventNode) {\r\n    eventNode.detach();\r\n  }\r\n  delete eventObject.timeout;\r\n\r\n  var callback = eventObject.callback;\r\n  if (callback) {\r\n    delete eventObject.callback;\r\n    var error = new TimeoutError(\"Event response for '\" + eventObject.event + \"' timed out\");\r\n    callback.call(eventObject, error, eventObject);\r\n  }\r\n  // Cleanup any pending response callback in the transport layer too.\r\n  if (eventObject.cid) {\r\n    this.transport.cancelPendingResponse(eventObject.cid);\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype._emit = function (event, data, callback) {\r\n  var self = this;\r\n\r\n  if (this.state === this.CLOSED) {\r\n    this.connect();\r\n  }\r\n  var eventObject = {\r\n    event: event,\r\n    callback: callback\r\n  };\r\n\r\n  var eventNode = new LinkedList.Item();\r\n\r\n  if (this.options.cloneData) {\r\n    eventObject.data = clone(data);\r\n  } else {\r\n    eventObject.data = data;\r\n  }\r\n  eventNode.data = eventObject;\r\n\r\n  eventObject.timeout = setTimeout(function () {\r\n    self._handleEventAckTimeout(eventObject, eventNode);\r\n  }, this.ackTimeout);\r\n\r\n  this._emitBuffer.append(eventNode);\r\n  if (this.state === this.OPEN) {\r\n    this._flushEmitBuffer();\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype.send = function (data) {\r\n  this.transport.send(data);\r\n};\r\n\r\nSCClientSocket.prototype.emit = function (event, data, callback) {\r\n  if (this._localEvents[event] == null) {\r\n    this._emit(event, data, callback);\r\n  } else if (event === 'error') {\r\n    Emitter.prototype.emit.call(this, event, data);\r\n  } else {\r\n    var error = new InvalidActionError('The \"' + event + '\" event is reserved and cannot be emitted on a client socket');\r\n    this._onSCError(error);\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype.publish = function (channelName, data, callback) {\r\n  var pubData = {\r\n    channel: this._decorateChannelName(channelName),\r\n    data: data\r\n  };\r\n  this.emit('#publish', pubData, callback);\r\n};\r\n\r\nSCClientSocket.prototype._triggerChannelSubscribe = function (channel, subscriptionOptions) {\r\n  var channelName = channel.name;\r\n\r\n  if (channel.state !== channel.SUBSCRIBED) {\r\n    var oldState = channel.state;\r\n    channel.state = channel.SUBSCRIBED;\r\n\r\n    var stateChangeData = {\r\n      channel: channelName,\r\n      oldState: oldState,\r\n      newState: channel.state,\r\n      subscriptionOptions: subscriptionOptions\r\n    };\r\n    channel.emit('subscribeStateChange', stateChangeData);\r\n    channel.emit('subscribe', channelName, subscriptionOptions);\r\n    Emitter.prototype.emit.call(this, 'subscribeStateChange', stateChangeData);\r\n    Emitter.prototype.emit.call(this, 'subscribe', channelName, subscriptionOptions);\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype._triggerChannelSubscribeFail = function (err, channel, subscriptionOptions) {\r\n  var channelName = channel.name;\r\n  var meetsAuthRequirements = !channel.waitForAuth || this.authState === this.AUTHENTICATED;\r\n\r\n  if (channel.state !== channel.UNSUBSCRIBED && meetsAuthRequirements) {\r\n    channel.state = channel.UNSUBSCRIBED;\r\n\r\n    channel.emit('subscribeFail', err, channelName, subscriptionOptions);\r\n    Emitter.prototype.emit.call(this, 'subscribeFail', err, channelName, subscriptionOptions);\r\n  }\r\n};\r\n\r\n// Cancel any pending subscribe callback\r\nSCClientSocket.prototype._cancelPendingSubscribeCallback = function (channel) {\r\n  if (channel._pendingSubscriptionCid != null) {\r\n    this.transport.cancelPendingResponse(channel._pendingSubscriptionCid);\r\n    delete channel._pendingSubscriptionCid;\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype._decorateChannelName = function (channelName) {\r\n  if (this.channelPrefix) {\r\n    channelName = this.channelPrefix + channelName;\r\n  }\r\n  return channelName;\r\n};\r\n\r\nSCClientSocket.prototype._undecorateChannelName = function (decoratedChannelName) {\r\n  if (this.channelPrefix && decoratedChannelName.indexOf(this.channelPrefix) === 0) {\r\n    return decoratedChannelName.replace(this.channelPrefix, '');\r\n  }\r\n  return decoratedChannelName;\r\n};\r\n\r\nSCClientSocket.prototype._trySubscribe = function (channel) {\r\n  var self = this;\r\n\r\n  var meetsAuthRequirements = !channel.waitForAuth || this.authState === this.AUTHENTICATED;\r\n\r\n  // We can only ever have one pending subscribe action at any given time on a channel\r\n  if (this.state === this.OPEN && !this.preparingPendingSubscriptions &&\r\n    channel._pendingSubscriptionCid == null && meetsAuthRequirements) {\r\n\r\n    var options = {\r\n      noTimeout: true\r\n    };\r\n\r\n    var subscriptionOptions = {\r\n      channel: this._decorateChannelName(channel.name)\r\n    };\r\n    if (channel.waitForAuth) {\r\n      options.waitForAuth = true;\r\n      subscriptionOptions.waitForAuth = options.waitForAuth;\r\n    }\r\n    if (channel.data) {\r\n      subscriptionOptions.data = channel.data;\r\n    }\r\n    if (channel.batch) {\r\n      options.batch = true;\r\n      subscriptionOptions.batch = true;\r\n    }\r\n\r\n    channel._pendingSubscriptionCid = this.transport.emit(\r\n      '#subscribe', subscriptionOptions, options,\r\n      function (err) {\r\n        delete channel._pendingSubscriptionCid;\r\n        if (err) {\r\n          self._triggerChannelSubscribeFail(err, channel, subscriptionOptions);\r\n        } else {\r\n          self._triggerChannelSubscribe(channel, subscriptionOptions);\r\n        }\r\n      }\r\n    );\r\n    Emitter.prototype.emit.call(this, 'subscribeRequest', channel.name, subscriptionOptions);\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype.subscribe = function (channelName, options) {\r\n  var channel = this.channels[channelName];\r\n\r\n  if (!channel) {\r\n    channel = new SCChannel(channelName, this, options);\r\n    this.channels[channelName] = channel;\r\n  } else if (options) {\r\n    channel.setOptions(options);\r\n  }\r\n\r\n  if (channel.state === channel.UNSUBSCRIBED) {\r\n    channel.state = channel.PENDING;\r\n    this._trySubscribe(channel);\r\n  }\r\n\r\n  return channel;\r\n};\r\n\r\nSCClientSocket.prototype._triggerChannelUnsubscribe = function (channel, newState) {\r\n  var channelName = channel.name;\r\n  var oldState = channel.state;\r\n\r\n  if (newState) {\r\n    channel.state = newState;\r\n  } else {\r\n    channel.state = channel.UNSUBSCRIBED;\r\n  }\r\n  this._cancelPendingSubscribeCallback(channel);\r\n\r\n  if (oldState === channel.SUBSCRIBED) {\r\n    var stateChangeData = {\r\n      channel: channelName,\r\n      oldState: oldState,\r\n      newState: channel.state\r\n    };\r\n    channel.emit('subscribeStateChange', stateChangeData);\r\n    channel.emit('unsubscribe', channelName);\r\n    Emitter.prototype.emit.call(this, 'subscribeStateChange', stateChangeData);\r\n    Emitter.prototype.emit.call(this, 'unsubscribe', channelName);\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype._tryUnsubscribe = function (channel) {\r\n  var self = this;\r\n\r\n  if (this.state === this.OPEN) {\r\n    var options = {\r\n      noTimeout: true\r\n    };\r\n    if (channel.batch) {\r\n      options.batch = true;\r\n    }\r\n    // If there is a pending subscribe action, cancel the callback\r\n    this._cancelPendingSubscribeCallback(channel);\r\n\r\n    // This operation cannot fail because the TCP protocol guarantees delivery\r\n    // so long as the connection remains open. If the connection closes,\r\n    // the server will automatically unsubscribe the client and thus complete\r\n    // the operation on the server side.\r\n    var decoratedChannelName = this._decorateChannelName(channel.name);\r\n    this.transport.emit('#unsubscribe', decoratedChannelName, options);\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype.unsubscribe = function (channelName) {\r\n  var channel = this.channels[channelName];\r\n\r\n  if (channel) {\r\n    if (channel.state !== channel.UNSUBSCRIBED) {\r\n      this._triggerChannelUnsubscribe(channel);\r\n      this._tryUnsubscribe(channel);\r\n    }\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype.channel = function (channelName, options) {\r\n  var currentChannel = this.channels[channelName];\r\n\r\n  if (!currentChannel) {\r\n    currentChannel = new SCChannel(channelName, this, options);\r\n    this.channels[channelName] = currentChannel;\r\n  }\r\n  return currentChannel;\r\n};\r\n\r\nSCClientSocket.prototype.destroyChannel = function (channelName) {\r\n  var channel = this.channels[channelName];\r\n\r\n  if (channel) {\r\n    channel.unwatch();\r\n    channel.unsubscribe();\r\n    delete this.channels[channelName];\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype.subscriptions = function (includePending) {\r\n  var subs = [];\r\n  var channel, includeChannel;\r\n  for (var channelName in this.channels) {\r\n    if (this.channels.hasOwnProperty(channelName)) {\r\n      channel = this.channels[channelName];\r\n\r\n      if (includePending) {\r\n        includeChannel = channel && (channel.state === channel.SUBSCRIBED ||\r\n          channel.state === channel.PENDING);\r\n      } else {\r\n        includeChannel = channel && channel.state === channel.SUBSCRIBED;\r\n      }\r\n\r\n      if (includeChannel) {\r\n        subs.push(channelName);\r\n      }\r\n    }\r\n  }\r\n  return subs;\r\n};\r\n\r\nSCClientSocket.prototype.isSubscribed = function (channelName, includePending) {\r\n  var channel = this.channels[channelName];\r\n  if (includePending) {\r\n    return !!channel && (channel.state === channel.SUBSCRIBED ||\r\n      channel.state === channel.PENDING);\r\n  }\r\n  return !!channel && channel.state === channel.SUBSCRIBED;\r\n};\r\n\r\nSCClientSocket.prototype.processPendingSubscriptions = function () {\r\n  var self = this;\r\n\r\n  this.preparingPendingSubscriptions = false;\r\n\r\n  var pendingChannels = [];\r\n\r\n  for (var i in this.channels) {\r\n    if (this.channels.hasOwnProperty(i)) {\r\n      var channel = this.channels[i];\r\n      if (channel.state === channel.PENDING) {\r\n        pendingChannels.push(channel);\r\n      }\r\n    }\r\n  }\r\n\r\n  pendingChannels.sort(function (a, b) {\r\n    var ap = a.priority || 0;\r\n    var bp = b.priority || 0;\r\n    if (ap > bp) {\r\n      return -1;\r\n    }\r\n    if (ap < bp) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  });\r\n\r\n  pendingChannels.forEach(function (channel) {\r\n    self._trySubscribe(channel);\r\n  });\r\n};\r\n\r\nSCClientSocket.prototype.watch = function (channelName, handler) {\r\n  if (typeof handler !== 'function') {\r\n    throw new InvalidArgumentsError('No handler function was provided');\r\n  }\r\n  this._channelEmitter.on(channelName, handler);\r\n};\r\n\r\nSCClientSocket.prototype.unwatch = function (channelName, handler) {\r\n  if (handler) {\r\n    this._channelEmitter.removeListener(channelName, handler);\r\n  } else {\r\n    this._channelEmitter.removeAllListeners(channelName);\r\n  }\r\n};\r\n\r\nSCClientSocket.prototype.watchers = function (channelName) {\r\n  return this._channelEmitter.listeners(channelName);\r\n};\r\n\r\nmodule.exports = SCClientSocket;\r\n"},"lineCount":1018}},"error":null,"hash":"9f45917a6da66c9e1313b643efb9d5a0","cacheData":{"env":{}}}